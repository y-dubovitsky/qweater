<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

        <!--XML с глобальными настройками-->
        <!--<import resource="GlobalSettingsContext.xml"/>-->

        <bean name="terminatorRobotImpl" class="basis.chapter.constructor.TerminatorRobotImpl">
                <constructor-arg ref="sonyHead"/>
                <constructor-arg ref="dellHand"/>
                <constructor-arg ref="appleLeg"/>
        </bean>

        <bean name="liquidMetalRobotImpl" class="basis.chapter.constructor.LiquidMetalRobotImpl">
                <property name="hand" ref="dellHand"/>
                <property name="head" ref="sonyHead"/>
                <property name="leg" ref="appleLeg"/>
        </bean>

        <bean name="getterSetterRobotImpl" class="basis.chapter.getters_setters.GetterSetterRobotImpl">
                <property name="head" ref="sonyHead"/>
                <property name="leg" ref="appleLeg"/>
                <property name="hand" ref="dellHand"/>
        </bean>

        <!-- Сетаем параметры через xmlns:p .... Сперва отрабатывает всегда конструктор, затем сеттеры -->
        <bean name="paramsOrderRobotImpl" class="basis.chapter.params_order.ParamsOrderRobotImpl"
              p:blessed="true">
                <constructor-arg ref="dellHand" index="0"/>
                <constructor-arg ref="sonyHead" index="1"/>
                <constructor-arg ref="appleLeg" index="2"/>
                <property name="age" value="1234"/>
        </bean>

        <bean name="singletonRobotImpl" class="basis.chapter.scope.ScopeRobotImpl" scope="singleton" init-method="init" destroy-method="destroy">
                <constructor-arg ref="dellHand" index="0"/>
                <constructor-arg ref="sonyHead" index="1"/>
                <constructor-arg ref="appleLeg" index="2"/>
        </bean>

        <!--Используется в качестве параметра объект, области видимости которого НЕ СИНГЛТОН-->
        <bean name="singletonWithPrototypeRef" class="basis.chapter.scope.ScopeRobotImpl" scope="singleton" init-method="init" destroy-method="destroy">
                <constructor-arg ref="dellHand" index="0"/>
                <constructor-arg ref="sonyHead" index="1"/>
                <constructor-arg ref="toshibaLegPrototype" index="2"/>
        </bean>

        <bean name="prototypeRobotImpl" class="basis.chapter.scope.ScopeRobotImpl" scope="prototype" init-method="init" destroy-method="destroy">
                <constructor-arg ref="dellHand" index="0"/>
                <constructor-arg ref="sonyHead" index="1"/>
                <constructor-arg ref="appleLeg" index="2"/>
        </bean>

        <bean name="liveCycleInterfaceRobotImpl" class="basis.chapter.livecycle_interfaces.LiveCycleInterfaceRobotImpl"
              p:hand-ref="dellHand"
              p:head-ref="sonyHead"
              p:leg-ref="appleLeg"
        />

        <bean name="dependentRobotImpl" class="basis.chapter.initialization_sequence.DependentRobotImpl" depends-on="specificDatabase"
              p:database-ref="specificDatabase"
        />

        <bean name="specificDatabase" class="basis.database.impl.SpecificDatabase"/>

        <!--Bean inheritance start-->
        <bean name="childRobotImpl" class="basis.chapter.bean_inheritance.ChildRobotImpl" parent="constructorArgBean">
                <constructor-arg name="flag" value="true"/>
        </bean>

        <bean name="parentRobotImpl" abstract="true">
                <constructor-arg ref="dellHand" />
                <constructor-arg ref="sonyHead" />
                <constructor-arg ref="appleLeg" />
        </bean>

        <!--Такого бина вообще нет! Он просто для настройки-->
        <bean id="constructorArgBean" abstract="true">
                <constructor-arg ref="dellHand" />
                <constructor-arg ref="sonyHead" />
                <constructor-arg ref="appleLeg" />
        </bean>
        <!--Bean inheritance end-->

        <!--Collection start-->
        <bean name="robotCollection" class="basis.chapter.collection.CollectionListRobotImpl">
                <property name="robotCollection">
                        <list>
                                <bean class="basis.chapter.collection.RobotFromCollection" p:field="Earth"/>
                                <ref bean="liquidMetalRobotImpl"/>
                                <ref bean="terminatorRobotImpl"/>
                                <bean name="collectedRobot" class="basis.chapter.collection.RobotFromCollection">
                                        <property name="field" value="Moon"/>
                                </bean>
                        </list>
                </property>
        </bean>

        <bean name="robotCollectionMap" class="basis.chapter.collection.CollectionRobotMapImpl">
                <property name="robotMap">
                        <map>
                                <entry key="First" value-ref="terminatorRobotImpl"/>
                                <entry key="Second">
                                        <bean name="robotFromMap" class="basis.chapter.collection.RobotFromCollection">
                                                <property name="field" value="Field"/>
                                        </bean>
                                </entry>
                        </map>
                </property>
        </bean>
        <!--Collection end-->

        <bean name="appleLeg" class="basis.part.impl.AppleLeg"/>
        <bean name="dellHand" class="basis.part.impl.DellHand"/>
        <bean name="sonyHead" class="basis.part.impl.SonyHead"/>
        <bean name="toshibaLegPrototype" class="basis.part.impl.ToshibaLeg" scope="prototype"/>
</beans>